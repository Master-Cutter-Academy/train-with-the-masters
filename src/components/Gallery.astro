---
const {
  galleryMessage,
  galleryImageOne,
  galleryImageOneAlt,
  galleryImageTwo,
  galleryImageTwoAlt,
  galleryImageThree,
  galleryImageThreeAlt,
  galleryImageFour,
  galleryImageFourAlt,
  galleryImageFive,
  galleryImageFiveAlt,
  galleryImageSix,
  galleryImageSixAlt,
  galleryImageSeven,
  galleryImageSevenAlt,
  galleryImageEight,
  galleryImageEightAlt,
} = Astro.props.gallery;
---

<section class="lightbox">
  <div class="gallery-area">
    <div class="flex px-6 py-8">
      <img
        src={galleryImageOne}
        class="thumbnail hidden lg:block"
        alt={galleryImageOneAlt}
      />
      <p class="prose-xl mr-8 ml-8 w-full text-primary-content lg:w-2/3">
        {galleryMessage}
      </p>
      <img
        src={galleryImageSeven}
        class="thumbnail hidden lg:block"
        alt={galleryImageSevenAlt}
      />
    </div>
    <div
      class="mb-8 grid grid-cols-3 justify-items-center gap-8 lg:grid-cols-6"
    >
      <img
        src={galleryImageTwo}
        class="thumbnail"
        alt={galleryImageTwoAlt}
        tabindex="0"
      />
      <img
        src={galleryImageThree}
        class="thumbnail"
        alt={galleryImageThreeAlt}
      />
      <img src={galleryImageFour} class="thumbnail" alt={galleryImageFourAlt} />
      <img src={galleryImageFive} class="thumbnail" alt={galleryImageFiveAlt} />
      <img src={galleryImageSix} class="thumbnail" alt={galleryImageSixAlt} />
      <img
        src={galleryImageEight}
        class="thumbnail"
        alt={galleryImageEightAlt}
      />
    </div>
  </div>
  <dialog></dialog>
</section>

<script>
  import klik from "klik";

  const lightboxImages = document.querySelectorAll(".lightbox img");
  const lightboxDialog = document.querySelector(".lightbox dialog");

  for (const lightboxImage of lightboxImages) {
    const lightboxClone = lightboxImage.cloneNode();

    lightboxImage.addEventListener("click", () => {
      lightboxDialog.replaceChildren(lightboxClone);
      lightboxDialog.showModal();
    });

    klik.on(lightboxImage);
  }

  lightboxDialog.addEventListener("click", (event) => {
    if (event.target === lightboxDialog) {
      lightboxDialog.close();
    }
  });
</script>

<style>
  section {
    @apply container mx-auto max-w-5xl;
  }

  dialog:modal {
    display: flex;

    /* Layout */
    padding: 1rem;

    /* Appearance */
    background-color: hsl(0 0% 0%);
    border-style: none;
    box-shadow: 4.2px 0 8.3px hsl(0 0% 0% / 50%);
  }

  dialog img {
    display: block;

    /* Layout */
    height: calc(90vmin - 2rem);
    width: auto;
  }

  ::backdrop {
    /* Appearance */
    background-color: hsl(0 0% 0% / 80%);
  }

  .gallery-area {
    @apply flex flex-col items-center;
  }
  .gallery-area img {
    @apply h-[305px] rounded-md object-cover;
  }
</style>
