---
const { heading, optionOne, optionTwo, optionThree } = Astro.props.cta;

const wrapSpan = (string: string) =>
  new String(
    string.replace(
      /\$[0-9]{3,}/g,
      `<span class="text-lg font-medium text-primary-content lg:text-2xl">$&</span>`
    )
  );
---

<section class="card basis-1/3 border bg-primary text-primary-content">
  <div class="card-body place-items-center text-center">
    <h3
      class="mb-2 text-4xl font-black text-secondary underline underline-offset-4 lg:text-5xl"
    >
      {heading}
    </h3>

    <div class="mt-auto space-y-2 text-primary-content">
      <h3 class="font-bold lg:text-lg">
        {wrapSpan(optionOne)}
      </h3>
      <h3 class="font-bold lg:text-lg">
        {wrapSpan(optionTwo)}
      </h3>
      <h3 class="font-bold lg:text-lg">
        {wrapSpan(optionThree)}
      </h3>
    </div>

    <div class="mt-auto">
      <form
        class="form-control my-4 place-items-center text-center"
        action="https://www.paypal.com/cgi-bin/webscr"
        method="POST"
      >
        <select name="os0" class="select select-bordered select-md w-full">
          <option>WATCH LIVE ON ZOOM</option>
          <option>IN PERSON DEMOS</option>
          <option>IN PERSON DEMOS + HANDS-ON</option>
        </select>
        <br />
        <button class="confetti btn btn-secondary btn-md font-black lg:btn-lg"
          >Sign Up</button
        >
        <input type="hidden" name="cmd" value="_s-xclick" />
        <input type="hidden" name="currency_code" value="USD" />
        <input type="hidden" name="hosted_button_id" value="XC8BSWXR4VFLU" />
      </form>
    </div>

    <div class="mt-auto flex-none font-medium leading-relaxed">
      <strong>QUESTIONS?</strong><br />
      <span>CALL US AT (917) 519-9309</span>
    </div>
  </div>
</section>

<script>
  import confetti from "canvas-confetti";

  const button = document.querySelector(".confetti");

  button.addEventListener("click", (event: any) => {
    //event.preventDefault();

    const { clientX, clientY } = event;

    confetti({
      particleCount: 100,
      startVelocity: 30,
      spread: 360,
      origin:
        clientX || clientY
          ? {
              x: clientX / visualViewport.width,
              y: clientY / visualViewport.height,
            }
          : getElementCenter(),
    });
  });

  const getElementCenter = () => {
    const box = button.getBoundingClientRect();

    return {
      x: (box.x + box.width / 2) / visualViewport.width,
      y: (box.y + box.height / 2) / visualViewport.height,
    };
  };
</script>
